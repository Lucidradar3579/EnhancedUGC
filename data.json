import requests
import json
import os

# ==== CONFIGURATION ====
API_KEY = os.getenv("ROBLOX_API_KEY")  # Set this in your environment variables
DATA_FILE = "data.json"

# UGC items with dev owners
items = {
    "463966667": {"dev": "Cain", "name": "Scarlet Witch Crown", "thumbnail": ""},
    "463966668": {"dev": "Cain", "name": "Lady Death Crown", "thumbnail": ""},
    "204792413": {"dev": "Leo", "name": "Magic Play", "thumbnail": ""},
    "204792414": {"dev": "Leo", "name": "Dreamwalking", "thumbnail": ""},
    "345678901": {"dev": "Charl", "name": "Sparkly Cape", "thumbnail": ""}
}

# Initialize earnings
earnings = {"Cain": 0, "Leo": 0, "Charl": 0}

# Function to fetch sales for a UGC item
def get_ugc_sales(item_id):
    url = f"https://apis.roblox.com/marketplace/v1/items/{item_id}/sales"
    headers = {"Authorization": f"Bearer {API_KEY}"}
    response = requests.get(url, headers=headers)
    if response.status_code != 200:
        print(f"Failed to get sales for {item_id}: {response.status_code}")
        return []
    return response.json()  # Returns a list of sales

# Build the data structure
item_data = {}
for item_id, info in items.items():
    sales = get_ugc_sales(item_id)
    total_robux = sum(sale.get("price", 0) for sale in sales)  # Sum Robux earned
    earnings[info["dev"]] += total_robux
    item_data[item_id] = {
        "name": info["name"],
        "dev": info["dev"],
        "thumbnail": info["thumbnail"],
        "sales_count": len(sales),
        "robux_earned": total_robux
    }

# Final JSON
data = {
    "items": item_data,
    "earnings": earnings
}

# Write to data.json
with open(DATA_FILE, "w") as f:
    json.dump(data, f, indent=4)

print("Earnings updated successfully!")
